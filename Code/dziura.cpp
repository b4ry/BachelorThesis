#include "dziura.h"

/***************************************************************************************************************************************/
Dziura::Dziura() {
	d = 0;
	l = 0;
	punkt = new Punkt();
}
/***************************************************************************************************************************************/
Dziura::Dziura(int d, int l, int x, int y) {
	this->d = d;
	this->l = l;
	this->punkt = new Punkt(x, y);
}
/***************************************************************************************************************************************/
void Dziura::ustawD(int d) {
	this->d = d;
}
/***************************************************************************************************************************************/
void Dziura::ustawL(int l) {
	this->l = l;
}
/***************************************************************************************************************************************/
void Dziura::modyfikujPkt(int x, int y) {
	punkt->ustawX(x);
	punkt->ustawY(y);
}
/***************************************************************************************************************************************/
int Dziura::zwrocD() {
	return d;
}
/***************************************************************************************************************************************/
int Dziura::zwrocL() {
	return l;
}
/***************************************************************************************************************************************/
int Dziura::zwrocX() {
	return punkt->pobierzX();;
}
/***************************************************************************************************************************************/
int Dziura::zwrocY() {
	return punkt->pobierzY();
}
/***************************************************************************************************************************************/
bool sortujListeDziurD(Dziura &dziura1, Dziura &dziura2) {
	return dziura1.zwrocD() > dziura2.zwrocD();
}
/***************************************************************************************************************************************/
bool sortujListeDziurL(Dziura &dziura1, Dziura &dziura2) {
	return dziura1.zwrocL() > dziura2.zwrocL();
}
/***************************************************************************************************************************************/
bool wyrzucPlytsze(Dziura &dziura1, Dziura &dziura2) {
	return dziura1.zwrocD() > dziura2.zwrocD();
}
/***************************************************************************************************************************************/
bool wyrzucWezsze(Dziura &dziura1, Dziura &dziura2) {
	return dziura1.zwrocL() > dziura2.zwrocL();
}
/***************************************************************************************************************************************/